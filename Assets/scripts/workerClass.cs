using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using UnityEngine;
using UnityEngine.UI;
using static OfficeManager;

public class workerClass : MonoBehaviour
{
    public bool letsStart;

    public GameObject GameOver;

    public GameObject workersPanel;

    public GameObject creditPanel;

    public int timeSpeed;
    public GameObject map;
    public struct Task
    {
        public string name;
        public int difficulty;
        public int restTime;
        public int payment;
        public int progress;
    }
    public int date = 0;
    public int hours = 0;
    public int minutes = 0;
    public float seconds = 0;
    private float waitTime = 10.0f;
    private float timer = 0.0f;
    public GameObject hirePanel = null;
    public int count10000Frames = 0;
    public long payedCredit = 0;
    public long Budget;
    public long credit = 0;
    public long maxCredit = 600000;
    public struct Worker
    {
        public string name;
        public int idwork;
        public int stage;
        public Sprite namimage;
    }
    public List<Task> tasksCurent = new List<Task>();
    public List<Task> tasks = new List<Task>();
    private List<Task> tasksStorage = new List<Task>();
    public List<Worker> workers = new List<Worker>();
    private List<Worker> workerStorage = new List<Worker>();
    public Sprite image1 = null;
    public Sprite image2 = null;
    public Sprite image3 = null;
    public Sprite image4 = null;

    String[] manNamesFirst =
    {
        "Товарищев","Игнатов", "Токарев", "Никифоров", "Семенов", "Попов", "Голиков", "Сорокин", "Глушков", "Смирнов", "Яковлев", "Титов", "Сальников", "Смирнов", "Дементьев", "Морозов", "Панкратов", "Чеботарев", "Родин", "Уткин", "Иванов", "Соловьев", "Новиков", "Чернов", "Иванов", "Овчинников", "Петров", "Дьяконов", "Суханов", "Сергеев", "Сергеев", "Михайлов", "Соколов", "Сергеев", "Лукьянов", "Захаров", "Крылов", "Филиппов", "Смирнов", "Кузнецов", "Постников", "Маркин", "Лебедев", "Орлов", "Голубев", "Соловьев", "Панов", "Панков", "Быков", "Исаев", "Козырев", "Бирюков", "Ермолов", "Муравьев", "Малышев", "Овчинников", "Грачев", "Алексеев", "Жуков", "Павлов", "Фирсов", "Лапин", "Волков", "Куликов", "Сотников", "Корчагин", "Котов", "Афанасьев", "Фомичев", "Кузнецов", "Александров", "Журавлев", "Панов", "Андреев", "Мартынов", "Дружинин", "Носов", "Исаев", "Юдин", "Ершов", "Попов", "Шувалов", "Леонтьев", "Иванов", "Зверев", "Лазарев", "Тихомиров", "Петухов", "Сафонов", "Баранов", "Яковлев", "Федоров", "Лебедев", "Романов", "Беляков", "Исаев", "Орлов", "Виноградов", "Овчинников", "Гусев", "Виноградов",
    };
    String[] manNamesSecond =
    {
        "Товарищь","Артём", "Иван", "Владислав", "Олег", "Александр", "Даниил", "Владимир", "Илья", "Александр", "Вадим", "Захар", "Адам", "Дмитрий", "Станислав", "Михаил", "Михаил", "Платон", "Михаил", "Владислав", "Максим", "Сергей", "Марк", "Артём", "Мирон", "Матвей", "Артём", "Роман", "Вадим", "Евгений", "Дмитрий", "Сергей", "Давид", "Павел", "Никита", "Данияр", "Алексей", "Илья", "Святослав", "Роман", "Иван", "Артём", "Александр", "Григорий", "Даниил", "Никита", "Илья", "Матвей", "Пётр", "Михаил", "Матвей", "Артём", "Егор", "Игорь", "Владислав", "Андрей", "Игорь", "Марк", "Андрей", "Марк", "Михаил", "Дмитрий", "Арсений", "Андрей", "Владислав", "Олег", "Егор", "Даниил", "Руслан", "Иван", "Давид", "Александр", "Максим", "Тимур", "Александр", "Тихон", "Марк", "Никита", "Степан", "Артём", "Макар", "Антон", "Николай", "Пётр", "Давид", "Тимофей", "Илья", "Тимофей", "Глеб", "Егор", "Сергей", "Тимур", "Григорий", "Александр", "Роман", "Глеб", "Лев", "Александр", "Кирилл", "Ярослав", "Богдан",
    };
    String[] manNamesThird =
    {
        "", "Товарищевич", "Ильич", "Матвеевич", "Иванович", "Даниэльевич", "Даниилович", "Маркович", "Арсентьевич", "Иванович", "Кириллович", "Владимирович", "Михайлович", "Данилович", "Даниилович", "Максимович", "Даниэльевич", "Иванович", "Никитич", "Игоревич", "Даниилович", "Романович", "Михайлович", "Андреевич", "Александрович", "Фёдорович", "Андреевич", "Гордеевич", "Тимурович", "Данилович", "Петрович", "Ильич", "Маркович", "Романович", "Александрович", "Никитич", "Богданович", "Дмитриевич", "Львович", "Алексеевич", "Владиславович", "Лукич", "Антонович", "Максимович", "Платонович", "Русланович", "Кириллович", "Дмитриевич", "Андреевич", "Даниилович", "Романович", "Кириллович", "Андреевич", "Максимович", "Макарович", "Тимурович", "Артёмович", "Дмитриевич", "Максимович", "Артёмович", "Ильич", "Андреевич", "Андреевич", "Даниилович", "Тимофеевич", "Николаевич", "Александрович", "Иванович", "Егорович", "Маратович", "Артёмович", "Тимофеевич", "Романович", "Филиппович", "Александрович", "Егорович", "Кириллович", "Михайлович", "Никитич", "Никитич", "Львович", "Даниилович", "Максимович", "Никитич", "Германович", "Глебович", "Степанович", "Григорьевич", "Антонович", "Марсельевич", "Константинович", "Дмитриевич", "Степанович", "Игоревич", "Михайлович", "Артёмович", "Александрович", "Львович", "Ильич", "Михайлович", "Максимович", "Михайлович",
    };
    String[] womanNamesFirst =
    {
        "Товарищева", "Кириллова", "Маркова", "Кузьмина", "Васильева", "Колесникова", "Никитина", "Козлова", "Зуева", "Рожкова", "Назарова", "Воробьева", "Тихонова", "Фомина", "Данилова", "Черных", "Колесникова", "Белякова", "Лыкова", "Кудрявцева", "Грачева", "Овсянникова", "Григорьева", "Макарова", "Куприянова", "Петрова", "Кузьмина", "Павлова", "Демина", "Баранова", "Ильина", "Никулина", "Сорокина", "Васильева", "Тихонова", "Кузнецова", "Касаткина", "Денисова", "Пономарева", "Тихонова", "Дубова", "Литвинова", "Крылова", "Михайлова", "Логинова", "Герасимова", "Островская", "Воробьева", "Смирнова", "Ситникова", "Ильина", "Потапова", "Савельева", "Кузнецова", "Егорова", "Самсонова", "Хромова", "Савельева", "Ефимова", "Симонова", "Иванова", "Семенова", "Баранова", "Калашникова", "Аникина", "Моисеева", "Николаева", "Злобина", "Рыжова", "Тихонова", "Зубкова", "Алексеева", "Терентьева", "Давыдова", "Анисимова", "Коновалова", "Ларионова", "Вишневская", "Денисова", "Свешникова", "Киселева", "Антонова", "Кулакова", "Волкова", "Ермакова", "Лапшина", "Зорина", "Кожевникова", "Терентьева", "Румянцева", "Панова", "Акимова", "Захарова", "Петрова", "Соловьева", "Лазарева", "Князева", "Беляева", "Мельникова", "Васильева", "Шубина",
    };
    String[] womanNamesSecond =
    {
        "Товарка", "Стефания", "Дарья", "Ева", "Айлин", "Ангелина", "София", "Валерия", "Мария", "Малика", "Вероника", "Арина", "Елизавета", "Валерия", "Айша", "Екатерина", "Дарья", "Есения", "Александра", "Александра", "Лилия", "Екатерина", "Татьяна", "Полина", "Полина", "Кристина", "Сафия", "Дарья", "Варвара", "Ева", "Василиса", "Мария", "Евгения", "Виктория", "Амина", "Арина", "София", "Марина", "Анна", "Алиса", "Лейла", "Ева", "Полина", "Виктория", "Злата", "Наталья", "Мария", "Эмилия", "Анастасия", "Анна", "Ника", "Кира", "Алиса", "Амина", "Анастасия", "Теона", "Ариана", "Алиса", "Ульяна", "Теона", "Юлия", "Алисия", "Мария", "Алиса", "София", "Валерия", "Дарья", "Мария", "Алиса", "Владислава", "Ксения", "Мария", "Эмилия", "София", "Полина", "Кира", "Ева", "Милана", "Дарина", "Ирина", "Марьям", "София", "Кристина", "Алиса", "Александра", "Вероника", "Елизавета", "Милана", "Мария", "Екатерина", "Евгения", "Владислава", "Александра", "Ирина", "Алиса", "Елизавета", "Екатерина", "Аглая", "Ангелина", "Виктория", "Алиса",
    };
    String[] womanNamesThird =
    {
        "", "Товарищевна", "Артёмовна", "Николаевна", "Ивановна", "Михайловна", "Филипповна", "Владимировна", "Павловна", "Артёмовна", "Егоровна", "Ярославовна", "Максимовна", "Фёдоровна", "Артёмовна", "Александровна", "Семёновна", "Владимировна", "Константиновна", "Марковна", "Максимовна", "Владимировна", "Георгиевна", "Матвеевна", "Ивановна", "Михайловна", "Артуровна", "Максимовна", "Павловна", "Михайловна", "Алиевна", "Андреевна", "Константиновна", "Игоревна", "Матвеевна", "Семёновна", "Фёдоровна", "Тимофеевна", "Фёдоровна", "Сергеевна", "Давидовна", "Матвеевна", "Артёмовна", "Артёмовна", "Владимировна", "Александровна", "Артемьевна", "Ильинична", "Дмитриевна", "Владимировна", "Тимуровна", "Дмитриевна", "Марковна", "Алексеевна", "Александровна", "Георгиевна", "Дмитриевна", "Дмитриевна", "Львовна", "Всеволодовна", "Демидовна", "Петровна", "Александровна", "Олеговна", "Данииловна", "Николаевна", "Ивановна", "Данииловна", "Андреевна", "Артёмовна", "Владимировна", "Владиславовна", "Ивановна", "Ивановна", "Денисовна", "Кирилловна", "Владимировна", "Егоровна", "Александровна", "Марковна", "Романовна", "Егоровна", "Ильинична", "Константиновна", "Юрьевна", "Ильинична", "Саввична", "Александровна", "Михайловна", "Леонидовна", "Ивановна", "Всеволодовна", "Михайловна", "Арсентьевна", "Львовна", "Ильинична", "Глебовна", "Давидовна", "Артёмовна", "Владимировна", "Тимофеевна", "Демидовна",
    };
    Worker genRandWorker()
    {
        Worker worker = new Worker();
        worker.idwork = -1;
        worker.stage = UnityEngine.Random.Range(1, 21);
        int img = UnityEngine.Random.Range(1, 5);
        switch (img)
        {
            case 1:
                worker.namimage = image1;
                break;
            case 2:
                worker.namimage = image2;
                break;
            case 3:
                worker.namimage = image3;
                break;
            case 4:
                worker.namimage = image4;
                break;
        }
        if (img  < 3)
        {
            worker.name =
                manNamesFirst[UnityEngine.Random.Range(0,manNamesFirst.Length)] + " "
                + manNamesSecond[UnityEngine.Random.Range(0, manNamesSecond.Length)] + " "
                + manNamesThird[UnityEngine.Random.Range(0, manNamesThird.Length)];
        }
        else
        {
            worker.name =
                womanNamesFirst[UnityEngine.Random.Range(0, womanNamesFirst.Length)] + " "
                + womanNamesSecond[UnityEngine.Random.Range(0, womanNamesSecond.Length)] + " "
                + womanNamesThird[UnityEngine.Random.Range(0, womanNamesThird.Length)];
        }
        return worker;
    }

    String[] tasksNames =
    {
        "создать сайт", "создать игру", "разработка сайта онлайн магазина стройматериалов", " разработка вк бота онлайн магазина стройматериалов", "разработка OMS для ленинского мемориала", " разработка вк бота дома культуры", " разработка тг бота онлайн магазина электроники", "разработка сайта доставки еды", " разработка дискорд бота магазина электроники", " разработка ERP для УлГПУ", "разработка PIM для магазина бытовых товаров", " разработка тг бота магазина ювелирных изделий", " разработка ERP для магазина одежды", " разработка ERP для онлайн магазина бытовой техники", "разработка сайта станции СТО", " разработка вк бота магазина бытовых товаров", " разработка ERP для политической партии", "разработка PIM для создание сайта УлГУ", "разработка PIM для исторического музея", " разработка дискорд бота магазина ювелирных изделий", " разработка тг бота магазина бытовой техники", " разработка дискорд бота онлайн магазина обуви", "разработка CRM для магазина бытовой химии", "разработка сайта охранного агенства", " разработка тг бота онлайн магазина автозапчастей", " разработка тг бота магазина автозапчастей", "разработка OMS для сайта кафе", " разработка вк бота магазина электроники", "разработка сайта УлгТУ", " разработка дискорд бота магазина велосипедных запчастей", "разработка сайта онлайн магазина автозапчастей", " разработка дискорд бота онлайн магазина бытовой химии", "разработка CRM для онлайн магазина стройматериалов", "разработка PIM для компьютерной игры", "разработка PIM для онлайн магазина сладостей", " разработка ERP для исторического музея", " разработка вк бота онлайн магазина обуви", "разработка CRM для магазина автозапчастей", "разработка CRM для онлайн магазина одежды", "разработка CRM для магазина велосипедных запчастей", " разработка ERP для ресторана", "разработка PIM для онлайн магазина стройматериалов", " разработка тг бота магазина бытовых товаров", "разработка сайта онлайн магазина одежды", "разработка PIM для новостного агенства", " разработка ERP для краеведческого музея", " разработка дискорд бота дома культуры", " разработка дискорд бота онлайн магазина одежды", " разработка тг бота онлайн магазина стройматериалов", " разработка ERP для магазина автозапчастей", "разработка сайта магазина спорт. инвентаря", "разработка CRM для новостного агенства", " разработка вк бота магазина сладостей", "разработка PIM для ленинского мемориала", " разработка ERP для онлайн магазина сладостей", " разработка тг бота магазина электроники", " разработка дискорд бота ульяновского ветропарка", " разработка дискорд бота онлайн магазина сладостей", "разработка OMS для магазина электроники", "разработка CRM для дома культуры", " разработка тг бота магазина обуви", "разработка PIM для магазина спорт. инвентаря", "разработка сайта компьютерной игры", "разработка OMS для магазина спорт. инвентаря", " разработка дискорд бота магазина бытовых товаров", "разработка сайта ульяновского ветропарка", " разработка дискорд бота магазина стройматериалов", "разработка CRM для создание сайта УлГУ", " разработка дискорд бота УлГПУ", "разработка CRM для магазина ювелирных изделий", "разработка сайта магазина одежды", " разработка вк бота онлайн магазина сладостей", " разработка тг бота магазина велосипедных запчастей", "разработка PIM для онлайн магазина бытовой химии", "разработка сайта создание сайта УлГУ", " разработка дискорд бота ресторана", " разработка тг бота новостного агенства", " разработка дискорд бота онлайн магазина бытовой техники", " разработка дискорд бота транспортной компании", " разработка дискорд бота сайта кафе", " разработка тг бота сайта кафе", " разработка ERP для онлайн магазина одежды", " разработка дискорд бота создание сайта УлГУ", "разработка OMS для доставки еды", " разработка дискорд бота политической партии", "разработка OMS для магазина бытовой техники", "разработка PIM для онлайн магазина обуви", " разработка тг бота онлайн магазина одежды", " разработка тг бота магазина бытовой химии", " разработка дискорд бота магазина обуви", " разработка вк бота станции СТО", " разработка дискорд бота новостного агенства", " разработка дискорд бота магазина спорт. инвентаря", " разработка тг бота ленинского мемориала", " разработка тг бота охранного агенства", "разработка сайта магазина сладостей", "разработка CRM для политической партии", "разработка OMS для политической партии", " разработка дискорд бота УлгТУ", "разработка CRM для онлайн магазина бытовой техники", " разработка тг бота ульяновского ветропарка", "разработка OMS для магазина бытовой химии", " разработка вк бота ленинского мемориала", " разработка дискорд бота онлайн магазина электроники", "разработка CRM для онлайн магазина электроники", "разработка CRM для УлГПУ", "разработка сайта онлайн магазина обуви", "разработка сайта онлайн магазина ювелирных изделий", "разработка PIM для автосалона", "разработка сайта онлайн магазина спорт. инвентаря", "разработка сайта магазина электроники", "разработка сайта магазина автозапчастей", " разработка тг бота магазина спорт. инвентаря", "разработка CRM для магазина бытовых товаров", "разработка CRM для магазина электроники", "разработка PIM для магазина стройматериалов", "разработка CRM для онлайн магазина обуви", "разработка OMS для онлайн магазина автозапчастей", " разработка ERP для ленинского мемориала", " разработка ERP для автосалона", " разработка тг бота компьютерной игры", " разработка ERP для магазина сладостей", " разработка вк бота онлайн магазина автозапчастей", " разработка вк бота магазина автозапчастей", " разработка дискорд бота магазина бытовой химии", " разработка тг бота магазина стройматериалов", "разработка PIM для онлайн магазина электроники", " разработка вк бота исторического музея", "разработка OMS для онлайн магазина бытовой техники", "разработка PIM для магазина автозапчастей", " разработка вк бота политической партии", " разработка вк бота магазина одежды", " разработка ERP для ульяновского ветропарка", "разработка OMS для магазина бытовых товаров", " разработка вк бота компьютерной игры", "разработка сайта магазина обуви", "разработка сайта транспортной компании", " разработка дискорд бота доставки еды", "разработка CRM для магазина бытовой техники", "разработка PIM для магазина бытовой техники", "разработка сайта онлайн магазина бытовой химии", " разработка вк бота онлайн магазина бытовых товаров", "разработка сайта магазина велосипедных запчастей", " разработка ERP для онлайн магазина автозапчастей", " разработка ERP для онлайн магазина спорт. инвентаря", " разработка вк бота магазина бытовой техники", " разработка дискорд бота станции СТО", " разработка тг бота исторического музея", " разработка дискорд бота магазина одежды", " разработка тг бота ресторана", "разработка OMS для онлайн магазина бытовой химии", " разработка тг бота УлГПУ", "разработка сайта ресторана", " разработка вк бота УлгТУ", "разработка PIM для онлайн магазина автозапчастей", "разработка сайта магазина ювелирных изделий", "разработка OMS для магазина ювелирных изделий", " разработка дискорд бота охранного агенства", " разработка дискорд бота магазина автозапчастей", "разработка PIM для станции СТО", " разработка ERP для онлайн магазина обуви", "разработка OMS для онлайн магазина электроники", " разработка тг бота транспортной компании", " разработка дискорд бота краеведческого музея", " разработка тг бота создание сайта УлГУ", " разработка дискорд бота онлайн магазина автозапчастей", "разработка OMS для магазина стройматериалов", "разработка CRM для ресторана", " разработка тг бота онлайн магазина бытовой химии", " разработка вк бота ресторана", " разработка вк бота магазина стройматериалов", " разработка тг бота онлайн магазина ювелирных изделий", " разработка вк бота онлайн магазина бытовой техники", "разработка CRM для магазина стройматериалов", "разработка OMS для ульяновского ветропарка", " разработка ERP для магазина велосипедных запчастей", "разработка сайта онлайн магазина бытовой техники", "разработка OMS для онлайн магазина ювелирных изделий", " разработка тг бота УлгТУ", "разработка сайта краеведческого музея", "разработка PIM для УлгТУ", " разработка тг бота станции СТО", "разработка OMS для магазина автозапчастей", "разработка PIM для дома культуры", " разработка тг бота доставки еды", " разработка вк бота онлайн магазина ювелирных изделий", "разработка PIM для онлайн магазина бытовой техники", "разработка CRM для доставки еды", " разработка вк бота транспортной компании", "разработка OMS для исторического музея", "разработка PIM для доставки еды", "разработка CRM для автосалона", " разработка тг бота дома культуры", " разработка тг бота политической партии", " разработка вк бота магазина спорт. инвентаря", "разработка CRM для краеведческого музея", "разработка PIM для ресторана", " разработка ERP для компьютерной игры", "разработка сайта онлайн магазина бытовых товаров", "разработка PIM для онлайн магазина одежды", "разработка PIM для краеведческого музея", "разработка OMS для онлайн магазина одежды", "разработка PIM для магазина ювелирных изделий", "разработка OMS для онлайн магазина обуви", " разработка ERP для онлайн магазина ювелирных изделий", " разработка ERP для станции СТО", "разработка OMS для компьютерной игры", "разработка сайта ленинского мемориала", "разработка OMS для станции СТО", "разработка OMS для краеведческого музея", " разработка ERP для дома культуры", " разработка дискорд бота онлайн магазина стройматериалов", "разработка PIM для онлайн магазина спорт. инвентаря", "разработка OMS для УлгТУ", " разработка дискорд бота магазина бытовой техники", " разработка ERP для доставки еды", " разработка ERP для магазина бытовой химии", "разработка OMS для охранного агенства", "разработка CRM для онлайн магазина сладостей", "разработка CRM для исторического музея", " разработка ERP для магазина ювелирных изделий", " разработка ERP для создание сайта УлГУ", " разработка тг бота онлайн магазина обуви", " разработка ERP для новостного агенства", " разработка вк бота ульяновского ветропарка", "разработка CRM для магазина обуви", " разработка вк бота магазина велосипедных запчастей", "разработка OMS для УлГПУ", "разработка PIM для УлГПУ", " разработка ERP для онлайн магазина стройматериалов", " разработка ERP для охранного агенства", "разработка OMS для онлайн магазина бытовых товаров", " разработка ERP для УлгТУ", "разработка PIM для магазина бытовой химии", " разработка вк бота краеведческого музея", " разработка ERP для магазина спорт. инвентаря", " разработка вк бота магазина ювелирных изделий", "разработка PIM для магазина одежды", " разработка вк бота новостного агенства", " разработка тг бота автосалона", " разработка дискорд бота ленинского мемориала", " разработка вк бота онлайн магазина одежды", "разработка PIM для транспортной компании", "разработка CRM для магазина одежды", " разработка ERP для онлайн магазина бытовых товаров", " разработка тг бота онлайн магазина бытовых товаров", " разработка тг бота магазина одежды", "разработка сайта магазина бытовой техники", " разработка дискорд бота компьютерной игры", "разработка PIM для онлайн магазина ювелирных изделий", " разработка вк бота охранного агенства", " разработка вк бота создание сайта УлГУ", " разработка тг бота онлайн магазина сладостей", "разработка сайта онлайн магазина сладостей", "разработка CRM для онлайн магазина бытовых товаров", "разработка CRM для онлайн магазина автозапчастей", "разработка сайта онлайн магазина электроники", "разработка CRM для транспортной компании", "разработка CRM для компьютерной игры", " разработка вк бота магазина обуви", " разработка вк бота онлайн магазина спорт. инвентаря", "разработка сайта дома культуры", "разработка сайта магазина бытовых товаров", " разработка вк бота автосалона", "разработка CRM для магазина сладостей", "разработка OMS для дома культуры", "разработка сайта сайта кафе", " разработка дискорд бота магазина сладостей", "разработка PIM для сайта кафе", " разработка ERP для транспортной компании", "разработка OMS для магазина велосипедных запчастей", " разработка дискорд бота автосалона", " разработка ERP для магазина стройматериалов", "разработка PIM для магазина обуви", " разработка ERP для магазина бытовых товаров", " разработка дискорд бота исторического музея", " разработка тг бота магазина сладостей", " разработка дискорд бота онлайн магазина ювелирных изделий", " разработка тг бота онлайн магазина бытовой техники", " разработка ERP для магазина электроники", "разработка OMS для транспортной компании", "разработка PIM для магазина сладостей", "разработка CRM для сайта кафе", "разработка сайта политической партии", "разработка CRM для ленинского мемориала", "разработка CRM для УлгТУ", " разработка вк бота онлайн магазина электроники", "разработка PIM для охранного агенства", "разработка CRM для онлайн магазина спорт. инвентаря", "разработка OMS для новостного агенства", " разработка ERP для онлайн магазина электроники", "разработка OMS для магазина одежды", " разработка вк бота магазина бытовой химии", "разработка сайта исторического музея", "разработка PIM для ульяновского ветропарка", " разработка дискорд бота онлайн магазина спорт. инвентаря", " разработка дискорд бота онлайн магазина бытовых товаров", " разработка вк бота УлГПУ", "разработка CRM для онлайн магазина ювелирных изделий", "разработка OMS для магазина обуви", "разработка OMS для онлайн магазина сладостей", "разработка OMS для онлайн магазина стройматериалов", " разработка ERP для магазина бытовой техники", "разработка сайта магазина стройматериалов", " разработка ERP для онлайн магазина бытовой химии", "разработка PIM для магазина электроники", "разработка CRM для охранного агенства", "разработка OMS для создание сайта УлГУ", " разработка тг бота онлайн магазина спорт. инвентаря", "разработка CRM для магазина спорт. инвентаря", "разработка PIM для политической партии", "разработка OMS для онлайн магазина спорт. инвентаря", "разработка OMS для магазина сладостей", "разработка OMS для ресторана", "разработка OMS для автосалона", " разработка вк бота доставки еды", "разработка сайта магазина бытовой химии", "разработка PIM для онлайн магазина бытовых товаров", "разработка PIM для магазина велосипедных запчастей", " разработка вк бота сайта кафе", "разработка CRM для онлайн магазина бытовой химии", " разработка ERP для сайта кафе", "разработка CRM для ульяновского ветропарка", " разработка ERP для магазина обуви", "разработка CRM для станции СТО", "разработка сайта новостного агенства", "разработка сайта автосалона", " разработка тг бота краеведческого музея", " разработка вк бота онлайн магазина бытовой химии", "разработка сайта УлГПУ"
    };
    Task genRandTask()
    {
        Task task = new Task();
        task.name = tasksNames[UnityEngine.Random.Range(0, tasksNames.Length)];
        task.difficulty = UnityEngine.Random.Range(1, 20);
        task.restTime = UnityEngine.Random.Range(20, 150) + 5;
        task.payment = (int)(100 * task.difficulty * 1000 / 7 * UnityEngine.Random.Range((float)0.7, 3));
        task.progress = 0;
        return task;
    }

    // Start is called before the first frame update
    void Start()
    {
        letsStart = false;
        workers.Add(genRandWorker());
        hirePanel.GetComponent<hireManager>().Start();
        hirePanel.GetComponent<hireManager>().updateInfo();
        tasks.Add(genRandTask());

        timeSpeed = 5000;
        /*{
            Worker worker = new Worker();
            worker.name = "Товарищев Товарищ Товарищевич1";
            worker.idwork = -1;
            worker.stage = 1;
            worker.namimage = image1;
            workers.Add(worker);
            worker.name = "Товарищев Товарищ Товарищевич2";
            worker.namimage = image2;
            workers.Add(worker);
            worker.name = "Товарищев Товарищ Товарищевич3";
            workers.Add(worker);
            worker.name = "Товарищев Товарищ Товарищевич4";
            workers.Add(worker);
            worker.name = "Товарищев Товарищ Товарищевич5";
            workers.Add(worker);
            worker.name = "Товарищев Товарищ Товарищевич6";
            workers.Add(worker);
            worker.name = "Товарищев Товарищ Товарищевич7";
            workers.Add(worker);
            worker.name = "Товарищев Товарищ Товарищевич8";
            workers.Add(worker);
            worker.name = "Товарищев Товарищ Товарищевич9";
            worker.stage = 999;
            worker.namimage = image1;
            workerStorage.Add(worker);
            worker.name = "Товарищева Товарка Товарищевна";
            worker.stage = 999;
            worker.namimage = image3;
            workerStorage.Add(worker);
        }
        {
            Task task = new Task();
            task.name = "создать сайт";
            task.difficulty = 1;
            task.restTime = 36;
            task.payment = 100000;
            task.progress = 0;
            tasksStorage.Add(task);
            tasks.Add(tasksStorage[0]);
        }*/
    }

    // Update is called once per frame
    void Update()
    {
        if (letsStart && Budget < -10000)
        {
            letsStart = false;
            GameOver.SetActive(true);
        }
        if (!letsStart)
        {
            return;
        }
        float time = Time.deltaTime;
        timer += time;
        seconds += time*timeSpeed;
        if (seconds > 60)
        {
            minutes += (int)seconds / 60;
            seconds %= 60;
        }
        if (minutes > 60)
        {
            hours += minutes / 60;
            minutes %= 60;
        }
        if (hours > 24)
        {
            date += hours / 24;
            Budget -= credit / 36 / 30 * hours / 24;
            payedCredit += credit / 36 / 30 * hours / 24;
            credit -= credit / 36 / 30 * hours / 24;
            if (payedCredit >= 500000)
            {
                maxCredit += 500000;
                payedCredit = 0;
            }
            creditPanel.GetComponent<criditsManager>().updateInfo();
            for (int i = 0; i < tasksCurent.Count; i++)
            {
                Task tempTask = tasksCurent[i];
                tempTask.restTime -= hours / 24;
                if (tempTask.restTime < 0)
                {
                    tasksCurent.RemoveAt(i);
                    int index = i;
                    for (int o = 1; o < map.transform.childCount; o++)
                    {
                        for (int l = 0; l < map.transform.GetChild(o).GetComponent<OfficeManager>().workers.Count; l++)
                        {
                            if (map.transform.GetChild(o).GetComponent<OfficeManager>().workers[l].idwork == index)
                            {
                                Worker tempWorker = map.transform.GetChild(o).GetComponent<OfficeManager>().workers[l];
                                tempWorker.idwork = -1;
                                map.transform.GetChild(o).GetComponent<OfficeManager>().workers[l] = tempWorker;
                            }
                            else if (map.transform.GetChild(o).GetComponent<OfficeManager>().workers[l].idwork > index)
                            {
                                Worker tempWorker = map.transform.GetChild(o).GetComponent<OfficeManager>().workers[l];
                                tempWorker.idwork--;
                                map.transform.GetChild(o).GetComponent<OfficeManager>().workers[l] = tempWorker;
                            }

                        }
                    }
                    workersPanel.GetComponent<workersmanager>().updateInfo();
                }
                else
                    tasksCurent[i] = tempTask;
            }
            for (int i = 0; i < tasks.Count; i++)
            {
                Task tempTask = tasks[i];
                tempTask.restTime -= hours / 24;
                if (tempTask.restTime < 0)
                {
                    tasks.RemoveAt(i);
                }
                else
                    tasks[i] = tempTask;
            }
            for (int i = 1; i < map.transform.childCount; i++)
            {
                Debug.Log(map.transform.GetChild(i).GetComponent<OfficeManager>().workers.Count.ToString());
                for (int j = 0; j < map.transform.GetChild(i).GetComponent<OfficeManager>().workers.Count; j++)
                {
                    Debug.Log("id work = ");
                    if (map.transform.GetChild(i).GetComponent<OfficeManager>().workers[j].idwork != -1)
                    {
                        Debug.Log(map.transform.GetChild(i).GetComponent<OfficeManager>().workers[j].idwork.ToString());
                        Task tempTask = tasksCurent[map.transform.GetChild(i).GetComponent<OfficeManager>().workers[j].idwork];
                        tempTask.progress += ((int)(map.transform.GetChild(i).GetComponent<OfficeManager>().workers[j].stage/tempTask.difficulty)) * hours / 24;
                        if (tempTask.progress >= 100)
                        {
                            Budget += tempTask.payment;
                            tasksCurent.RemoveAt(map.transform.GetChild(i).GetComponent<OfficeManager>().workers[j].idwork);
                            int index = map.transform.GetChild(i).GetComponent<OfficeManager>().workers[j].idwork;
                            for (int o = 1; o < map.transform.childCount; o++)
                            {
                                for (int l = 0; l < map.transform.GetChild(o).GetComponent<OfficeManager>().workers.Count; l++)
                                {
                                    if (map.transform.GetChild(o).GetComponent<OfficeManager>().workers[l].idwork == index)
                                    {
                                        Worker tempWorker = map.transform.GetChild(o).GetComponent<OfficeManager>().workers[l];
                                        tempWorker.idwork = -1;
                                        if (tempWorker.stage < 22)
                                            tempWorker.stage++;
                                        map.transform.GetChild(o).GetComponent<OfficeManager>().workers[l] = tempWorker;
                                    }
                                    else if (map.transform.GetChild(o).GetComponent<OfficeManager>().workers[l].idwork > index)
                                    {
                                        Worker tempWorker = map.transform.GetChild(o).GetComponent<OfficeManager>().workers[l];
                                        tempWorker.idwork--;
                                        map.transform.GetChild(o).GetComponent<OfficeManager>().workers[l] = tempWorker;
                                    }
                                }
                            }
                            workersPanel.GetComponent<workersmanager>().updateInfo();
                        }
                        else
                        {
                            tasksCurent[map.transform.GetChild(i).GetComponent<OfficeManager>().workers[j].idwork] = tempTask;
                        }
                    }
                }
            }
            hours %= 24;
            if (date % 360 == 359)
            {
                Debug.Log("360 day");
                credit += credit / 100 * 20;
            }
            if (date % 7 == 6)
            {
                Debug.Log("7 day");
                for (int i = 1; i < map.transform.childCount; i++)
                {
                    for (int j = 0; j < map.transform.GetChild(i).GetComponent<OfficeManager>().workers.Count; j++)
                    {
                        Budget -= map.transform.GetChild(i).GetComponent<OfficeManager>().workers[j].stage * 1000;
                    }
                }
                if (tasks.Count >= 6)
                {
                    int index = UnityEngine.Random.Range(0, tasks.Count);
                    tasks.RemoveAt(index);
                    //tasks.Insert(index, tasksStorage[UnityEngine.Random.Range(0, tasksStorage.Count)]);
                    tasks.Insert(index, genRandTask());
                }
                else
                {
                    //tasks.Add(tasksStorage[UnityEngine.Random.Range(0, tasksStorage.Count)]);
                    tasks.Add(genRandTask());

                }
                if (workers.Count >= 8)
                {
                    int index = UnityEngine.Random.Range(0, workers.Count);
                    workers.RemoveAt(index);
                    //workers.Insert(index, workerStorage[UnityEngine.Random.Range(0, workerStorage.Count)]);
                    workers.Insert(index, genRandWorker());
                    hirePanel.GetComponent<hireManager>().updateInfo();
                }
                else
                {
                    //workers.Add(workerStorage[UnityEngine.Random.Range(0, workerStorage.Count)]);
                    workers.Add(genRandWorker());
                    hirePanel.GetComponent<hireManager>().updateInfo();
                }
            }
        }
    }
}
